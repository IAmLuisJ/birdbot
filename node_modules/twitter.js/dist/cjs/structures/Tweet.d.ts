import { Poll } from './Poll';
import { Place } from './Place';
import { Media } from './Media';
import { Collection } from '../util';
import { SimplifiedUser } from './SimplifiedUser';
import { SimplifiedTweet } from './SimplifiedTweet';
import type { Client } from '../client';
import type { TweetQuoteOptions, TweetReplyOptions } from '../typings';
import type { GetSingleTweetByIdResponse, Snowflake } from 'twitter-types';
/**
 * The class that represents a tweet on Twitter
 */
export declare class Tweet extends SimplifiedTweet {
    #private;
    /**
     * The author of the tweet
     */
    author: SimplifiedUser | null;
    /**
     * The users mentioned in the tweet
     */
    mentions: Collection<string, SimplifiedUser>;
    /**
     * The original tweet if this tweet is a reply
     */
    repliedTo: SimplifiedTweet | null;
    /**
     * The original tweet if this tweet is a quote
     */
    quoted: SimplifiedTweet | null;
    /**
     * The polls in the tweet
     */
    polls: Collection<string, Poll>;
    /**
     * The places tagged in the tweet
     */
    places: Collection<string, Place>;
    /**
     * The media contents in the tweet
     */
    media: Collection<string, Media>;
    constructor(client: Client, data: GetSingleTweetByIdResponse);
    /**
     * Sends a reply to this tweet
     * @param options The options for the reply
     * @returns The created reply
     */
    reply(options: TweetReplyOptions): Promise<{
        id: Snowflake;
        text: string;
    }>;
    /**
     * Quotes this tweet
     * @param options The options for quoting
     * @returns The created tweet
     */
    quote(options: TweetQuoteOptions): Promise<{
        id: Snowflake;
        text: string;
    }>;
    /**
     * Deletes this tweet.
     * @returns A boolean representing whether the tweet got deleted
     */
    delete(): Promise<boolean>;
}
